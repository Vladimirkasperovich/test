// Выведите с помощью цикла столбец чисел от 1 до 100
/*for (let i = 1; i <=100; i++){
    console.log(i)
}*/



// Выведите с помощью цикла столбец чисел от 100 до 1
/*for (let i = 100; i >= 1; i--){
    console.log(i)
}*/



// Выведите с помощью цикла столбец четных чисел от 1 до 100
/*for (let i = 1; i <= 100; i++){
    if (i % 2 === 0){
       console.log(i)
    }
}*/



//Выведите с помощью цикла столбец нечетных чисел от 1 до 100
/*for (let i = 1; i <= 100; i++){
   if (i % 2 !== 0){
       console.log(i)
   }
}*/



//Заполните массив 10-ю иксами с помощью цикла
/*let arr = [];
let text = 'x';
for (let i = 1; i <= 10; i++){
   arr.push(text);
}
console.log(arr)*/



//Заполните массив числами от 1 до 10 с помощью цикла
/*let arr = [];
for (let i = 1; i <= 10; i++){
   arr.push(i)
}
console.log(arr)*/



//Заполните массив 10-ю случайными числами (дробями) от 0 до 1 с помощью цикла. Дроби округляйте до двух знаков в дробной части
/*let arr = [];
for (let i = 0; i < 10; i++){
   arr.push(Math.random().toFixed(2));
}
console.log(arr)*/



//Заполните массив 10-ю случайными числами от 1 до 10 с помощью цикла
/*let arr = [];
for (let i = 0; i < 10; i++){
   arr.push(Math.round(Math.random() * 10) + 1)
}
console.log(arr)*/



//Дан массив с числами. С помощью цикла выведите только те элементы массива, которые больше нуля и меньше 10-ти.
/*let arr = [0, 1, 2, 3, 4, 5, 9, 100, 1000, 2000, 2000000];
for (let i = 0; i < arr.length; i++){
    if (arr[i] > 0 && arr[i] < 10){
        console.log(arr[i])
    }
}*/ 



// Дан массив с числами. С помощью цикла проверьте, что в нем есть элемент со значением 5. Как только будет найден первый такой элемент - выведите 'Есть' и оборвите цикл. Если такого элемента нет - ничего не выводите
/*let arr = [1, 2, 3, 4, 5];
for (let i = 0; i < arr.length; i++){
    if (arr[i] === 5){
        alert('yes');
        break;
    }
}*/



//Дан массив с числами. С помощью цикла найдите сумму элементов этого массива
let arr = [1, 2, 3, 4, 5];
for (let i = 0; i < ){
    console.log(elem += elem)
}
